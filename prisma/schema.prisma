generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Tenant {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @default(now())
  expiryDate DateTime         @db.Date
  name       String
  type       String
  users      UsersOnTenants[]
  clients    Client[]
  projects   Project[]
}

model User {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now())
  fullname  String
  username  String
  hash      String
  tenants   UsersOnTenants[]
}

model UsersOnTenants {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  tenantId   String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  assignedAt DateTime @default(now())
  assignedBy String   @db.ObjectId
  isAdmin    Boolean
  status     String
}

model Client {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  orgName   String
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  tenantId  String    @db.ObjectId
  projects  Project[]
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  adminId   String   @db.ObjectId
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  String   @db.ObjectId
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  title     String
}
